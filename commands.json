{
"select ":"select ",
"insert before ":"insert before ",
"insert after ":"insert after ",
"whoops":"return editor1.undoManager.undo()",
"what's":"return editor1.undoManager.undo()",
"undo":"return editor1.undoManager.undo()",
"select all":"return editor1.commands.selectAll.exec()",
"maximize":"return editor1.execCommand('maximize')",
"file save":"return fileSave(editor1)",
"backspace":"return bs(range)",
"delete that":"return range.deleteContents()",
"link that":"editor1.commands.link.exec()",
"emphasize that":"return editor1.execCommand('bold')",
"italicize that":"return editor1.execCommand('italic')",
"strike that":"return editor1.execCommand('strike')",
"superscript that":"return editor1.execCommand('superscript')",
"subscript that":"return editor1.execCommand('subscript')",
"underline that":"return editor1.execCommand('underline')",
"blockquote that":"return editor1.execCommand('blockquote')",
"bullet that":"return editor1.commands.bulletedlist.exec()",
"number that":"return editor1.commands.numberedlist.exec()",
"insert symbol":"return editor1.commands.specialchar.exec()",
"insert image":"return editor1.commands.image.exec()",
"horizontal line":"return editor1.commands.horizontalrule.exec()",
"heading 1":"return ele.replaceWith(dce('h1', html))",
"heading 2":"return ele.replaceWith(dce('h2', html))",
"heading 3":"return ele.replaceWith(dce('h3', html))",
"heading 4":"return ele.replaceWith(dce('h4', html))",
"heading 5":"return ele.replaceWith(dce('h5', html))",
"left justify that":"return ele.style.textAlign='left'",
"center that":"return ele.style.textAlign='center'",
"indent that":"return ele.style.textIndent='3em'",
"hanging indent that":"return ele.style='padding-left:3em;text-indent:-3em;')",
"color that red":"return ele.style.color='red'",
"color that orange":"return ele.style.color='Orange'",
"color that purple":"return ele.style.color='Purple'",
"color that green":"return ele.style.color='Green'",
"color that blue":"return ele.style.color='Blue'",
"capitalize that":"txt = capitalize(selection.getSelectedText())",
"uncapitalize that":"txt = capitalize(selection.getSelectedText(), false)",
"title case that":"txt = titleCaps(selection.getSelectedText())",
"mute":"return editor1.execCommand('speech')",
"end of line":"return gotoLine(selection.getStartElement())",
"beginning of line":"return gotoLine(selection.getStartElement(), true)",
"beginning of document":"return gotoLine(selection.root.getFirst(), true)",
"end of document":"return gotoLine(selection.root.getLast())",
"view commands":"return editor1.openDialog('speechCommandsDialog')",
"new paragraph":"txt = '</p>'",
"new line":"txt = '<br>'",
"view source":"return editor1.commands.source.exec()"
}
